#include <iostream>
using namespace std;

// Функция для первого пункта лабораторной работы
void firstPart() {
    int n, count = 0, temp, sum = 0;

    cout << "\nВведите количество элементов последовательности.\n";
    cin >> n;
    cout << "\nВведите элементы последовательности.\n";

    /*
     * Считываем элементы последовательности и сразу проверяем подходит ли
     * оно условию, т.е. нечётно ли оно и имеет ли чётную позицию
     */
    for (int i = 0; i < n; i++) {
        cin >> temp;
        /*
         * Если i равен 0 (нулевую позицию считаем чётной) или остаток от
         * деления на два равен нулю (чётное) и если остаток от деления
         * введённого элемента последовательности на два не равен нулю
         * (нечётное), то прибавляем текущий элемент к сумме и увеличиваем
         * счётчик на 1.
         */
        if ((i == 0 || i % 2 == 0) && temp % 2 != 0) {
            sum += temp;
            count++;
        }
    }

    cout << "\nСумма нечётных элементов с чётной позицией = " << sum;
    cout << "\nКоличество нечётных элементов с чётной позицией = " << count
         << endl;
}

// Функция для второго пункта лабораторной работы
void secondPart() {
    int count, temp, product = 1, negativeMax = -65536;

    cout << "\nВведите количество элементов последовательности (N).\n";
    cin >> count;
    cout << "\nВведите элементы последовательности целых чисел.\n";
    for (int i = 0; i < count; i++) {
        cin >> temp;

        /*
         * Считаем произведение нечётных чисел.
         */
        if (temp % 2 != 0) product *= temp;
        /*
         * Находим максимальное отрицательное число.
         */
        if (temp < 0 && temp > negativeMax)
            negativeMax = temp;
    }

    cout << "\nРазность между произведением нечётных чисел и наибольшим "
            "отрицательным числом = " << product - negativeMax << endl;
}

int main() {
    setlocale(LC_ALL, "rus");

    cout << "--------------\n"
         << "=Первый пункт=\n"
         << "--------------\n";
    firstPart(); // вызов функции для первого пункта лабораторной
    cout << "--------------\n"
         << "=Второй пункт=\n"
         << "--------------\n";
    secondPart(); // вызов функции для второго пункта лабораторной
    cin.get();

    return 0;
}
